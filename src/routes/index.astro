---
import BaseLayout from "@layouts/BaseLayout.astro";
import CTA from "@components/CTA.astro";
import { getLocalePath, t } from "i18n:astro";
import {getOptimizedImage} from "@utils/utils"

// Optimize our landing image and pass it as props to the BaseLayout (for preloading) and Hero (for rendering)
import landingImage from "@assets/images/hero.jpg" // <-- THE PATH TO THE ASSET YOU WANT TO PRELOAD - The asset must live in src
import mobileLandingImage from "@assets/images/hero.jpg" // <-- THE PATH TO THE ASSET YOU WANT TO PRELOAD - The asset must live in src
const optimizedLandingImage = await getOptimizedImage(landingImage)
const optimizedMobileLandingImage = await getOptimizedImage(mobileLandingImage)
---

<BaseLayout
  title={t("home:layout.title")}
  description={t("home:layout.description")}
  preloadedImage = {optimizedMobileLandingImage}

>
  <!-- ============================================ -->
  <!--                    Hero                      -->
  <!-- ============================================ -->

  <section id="hero">
    <div class="cs-container">
        <div class="cs-content">
            <span class="cs-topper">{t("home:hero.topper")}</span>
            <h1 class="cs-title">{t("home:hero.title.1")}</h1>
            <p class="cs-text">
                {t("home:hero.p1")}
            </p>
            <a href={getLocalePath("/contact")}  class="cs-button-solid">{t("home:hero.cta1")}</a>
        </div>
    </div>
    <!--Bubble Groups-->
    <div class="cs-bubbles cs-bubbles1" aria-hidden="true"></div>
    <div class="cs-bubbles cs-bubbles2" aria-hidden="true"></div>
    <!-- Background Image, background image added in the css at 1600px for parallax effect -->
    <picture class="cs-background">
        <source media="(max-width: 600px)" srcset={optimizedMobileLandingImage.src} />
        <source media="(min-width: 601px)" srcset={optimizedLandingImage.src} />
<img
        aria-hidden="true"
        src={optimizedLandingImage.src}
        width={optimizedLandingImage.attributes.width}
        height={optimizedLandingImage.attributes.height}
        loading="eager"
        alt=""
      />
    </picture>
    
</section>

<!-- ============================================ -->
<!--                 Why Choose                   -->
<!-- ============================================ -->

<section id="why-choose-289">
    <div class="cs-container">
        <div class="cs-content">
            <div class="cs-flex">
                <span class="cs-topper">{t("home:whychoose.0.topper")}</span>
                <h2 class="cs-title">{t("home:whychoose.0.heading")}</h2>
            </div>
            <p class="cs-text">
                {t("home:whychoose.0.p")}
            </p>
        </div>
        <ul class="cs-card-group">
            <li class="cs-item">
                <img class="cs-icon" aria-hidden="true" loading="lazy" decoding="async" src="/assets/svgs/award.svg" alt="icon" width="48" height="48">
                <h3 class="cs-h3">{t("home:whychoose.1.heading")}</h3>
                <p class="cs-item-text">
                    {t("home:whychoose.1.p")}
                </p>
            </li>
            <li class="cs-item">
                <img class="cs-icon" aria-hidden="true" loading="lazy" decoding="async" src="/assets/svgs/sheild-black.svg" alt="icon" width="40" height="48">
                <h3 class="cs-h3">{t("home:whychoose.2.heading")}</h3>
                <p class="cs-item-text">
                    {t("home:whychoose.2.p")}
                </p>
            </li>
            <li class="cs-item">
                <img class="cs-icon" aria-hidden="true" loading="lazy" decoding="async" src="/assets/svgs/call.svg" alt="icon" width="48" height="48">
                <h3 class="cs-h3">{t("home:whychoose.3.heading")}</h3>
                <p class="cs-item-text">
                    {t("home:whychoose.3.p")}
                </p>
            </li>
        </ul>
    </div>
</section>

<!-- ============================================ -->
<!--                   Steps                      -->
<!-- ============================================ -->

<section id="steps-1171">
  <div class="cs-container">
    <div class="cs-content">
      <span class="cs-topper">Our Work Process</span>
      <h2 class="cs-title">How We Build Your Digital Success</h2>
      <p class="cs-text">
        From the first idea to the final launch, we make sure every step is clear, collaborative, and tailored to your goals. Hereâ€™s how we work with you to turn vision into results.
      </p>
    </div>
    <ul class="cs-card-group">
      <li class="cs-item">
        <picture class="cs-picture">
          <img class="cs-icon" src="assets/svgs/lightbulb.svg" alt="icon" width="40" height="40" loading="lazy" decoding="async" aria-hidden="true">
        </picture>
        <h3 class="cs-h3">Discover & Strategy</h3>
        <p class="cs-item-p">
          We start by understanding your business, audience, and objectives. Together, we define a strategy that sets the foundation for measurable growth.
        </p>
      </li>
      <li class="cs-item">
        <picture class="cs-picture">
          <img class="cs-icon" src="assets/svgs/puzzle.svg" alt="icon" width="40" height="40" loading="lazy" decoding="async" aria-hidden="true">
        </picture>
        <h3 class="cs-h3">Creative Design</h3>
        <p class="cs-item-p">
          Our team designs sleek, engaging, and user-focused visuals that reflect your brand and capture attention across web and digital platforms.
        </p>
      </li>
      <li class="cs-item">
        <picture class="cs-picture">
          <img class="cs-icon" src="assets/svgs/gear.svg" alt="icon" width="40" height="40" loading="lazy" decoding="async" aria-hidden="true">
        </picture>
        <h3 class="cs-h3">Build & Optimize</h3>
        <p class="cs-item-p">
          We develop fast, secure, and scalable digital solutions. Every detail is optimized for performance, SEO, and a seamless user experience.
        </p>
      </li>
      <li class="cs-item">
        <picture class="cs-picture">
          <img class="cs-icon" src="assets/svgs/launch.svg" alt="icon" width="40" height="40" loading="lazy" decoding="async" aria-hidden="true">
        </picture>
        <h3 class="cs-h3">Launch & Grow</h3>
        <p class="cs-item-p">
          Once live, we track results and support you with ongoing campaigns, updates, and improvements to ensure your digital presence keeps growing.
        </p>
      </li>
    </ul>
  </div>
</section>

                                

<!-- ============================================ -->
<!--                    Industries                  -->
<!-- ============================================ -->

<section id="services-1724">
    <div class="cs-container">
        <div class="cs-content">
    <div class="cs-flex-group">
        <span class="cs-topper">{t("home:industries.topper")}</span>
        <h2 class="cs-title">{t("home:industries.title")}</h2>
    </div>
    <p class="cs-text">
        {t("home:industries.p")}
    </p>
</div>

        <ul class="cs-card-group">
            <li class="cs-item">
                <a href={getLocalePath("industries/real-estate")} class="cs-link">
                    <span class="cs-number">01</span>
                    <h3 class="cs-h3">{t("home:industries.s1")}</h3>
                </a>
                <picture class="cs-picture">
                    <source media="(max-width: 600px)"
                            srcset="/assets/images/realestate.jpg">
                    <source media="(min-width: 601px)"
                            srcset="/assets/images/realestate.jpg">
                    <img decoding="async"
                            src="/assets/images/realestate.jpg"
                            alt="Real Estate" width="413" height="374" aria-hidden="true" loading="lazy">
                </picture>
            </li>
            <li class="cs-item">
                <a href={getLocalePath("industries/hospitality-tourism")}  class="cs-link">
                    <span class="cs-number">02</span>
                    <h3 class="cs-h3">{t("home:industries.s2")}</h3>
                </a>
                <picture class="cs-picture">
                    <source media="(max-width: 600px)"
                            srcset="/assets/images/hospitality.jpg">
                    <source media="(min-width: 601px)"
                            srcset="/assets/images/hospitality.jpg">
                    <img decoding="async"
                            src="/assets/images/hospitality.jpg"
                            alt="Hospitality Tourism" width="413" height="374" aria-hidden="true" loading="lazy">
                </picture>
            </li>
            <li class="cs-item">
                <a href={getLocalePath("industries/healthcare-wellness")}  class="cs-link">
                    <span class="cs-number">03</span>
                    <h3 class="cs-h3">{t("home:industries.s3")}</h3>
                </a>
                <picture class="cs-picture">
                    <source media="(max-width: 600px)"
                            srcset="/assets/images/gym-service-3.jpg">
                    <source media="(min-width: 601px)"
                            srcset="/assets/images/gym-service-3.jpg">
                    <img decoding="async"
                            src="/assets/images/gym-service-3.jpg"
                            alt="Healthcare Wellness" width="413" height="374" aria-hidden="true" loading="lazy">
                </picture>
            </li>
            <li class="cs-item">
                <a href={getLocalePath("industries/ecommerce-retail")} class="cs-link">
                    <span class="cs-number">04</span>
                    <h3 class="cs-h3">{t("home:industries.s4")}</h3>
                </a>
                <picture class="cs-picture">
                    <source media="(max-width: 600px)"
                            srcset="/assets/images/ecommerce.jpg">
                    <source media="(min-width: 601px)"
                            srcset="/assets/images/ecommerce.jpg">
                    <img decoding="async"
                            src="/assets/images/ecommerce.jpg"
                            alt="Ecommerce Retail" width="413" height="374" aria-hidden="true" loading="lazy">
                </picture>
            </li>
            <li class="cs-item">
                <a href={getLocalePath("industries/professional-services")} class="cs-link">
                    <span class="cs-number">05</span>
                    <h3 class="cs-h3">{t("home:industries.s5")}</h3>
                </a>
                <picture class="cs-picture">
                    <source media="(max-width: 600px)"
                            srcset="/assets/images/professionalservices.jpg">
                    <source media="(min-width: 601px)"
                            srcset="/assets/images/professionalservices.jpg">
                    <img decoding="async"
                            src="/assets/images/professionalservices.jpg"
                            alt="Professional Services" width="413" height="374" aria-hidden="true" loading="lazy">
                </picture>
            </li>
        </ul>
    </div>
</section>

<!-- ============================================ -->
<!--                   Reviews                    -->
<!-- ============================================ -->

<section id="reviews-355">
    <div class="cs-container">
        <div class="cs-content">
            <span class="cs-topper">{t("home:reviews.topper")}</span>
            <h2 class="cs-title">{t("home:reviews.title")}</h2>
            <p class="cs-text">
                {t("home:reviews.p")}
            </p>
        </div>
        <ul class="cs-card-group">
            <li class="cs-item">
                <img class="cs-quote" aria-hidden="true" src="https://csimg.nyc3.digitaloceanspaces.com/Reviews/quote-blue.svg" decoding="async" alt="quote icon" width="40" height="33">
                <p class="cs-review">
                    {t("home:reviews.reviews.0.review")}
                </p>
                <span class="cs-name">{t("home:reviews.reviews.0.name")}</span>
                <span class="cs-job">{t("home:reviews.reviews.0.rank")}</span>
            </li>
            <li class="cs-item">
                <img class="cs-quote" aria-hidden="true" src="https://csimg.nyc3.digitaloceanspaces.com/Reviews/quote-blue.svg" decoding="async" alt="quote icon" width="40" height="33">
                <p class="cs-review">
                    {t("home:reviews.reviews.1.review")}
                </p>
                <span class="cs-name">{t("home:reviews.reviews.1.name")}</span>
                <span class="cs-job">{t("home:reviews.reviews.1.rank")}</span>
            </li>
            <li class="cs-item">
                <img class="cs-quote" aria-hidden="true" src="https://csimg.nyc3.digitaloceanspaces.com/Reviews/quote-blue.svg" decoding="async" alt="quote icon" width="40" height="33">
                <p class="cs-review">
                    {t("home:reviews.reviews.2.review")}
                </p>
                <span class="cs-name">{t("home:reviews.reviews.2.name")}</span>
                <span class="cs-job">{t("home:reviews.reviews.2.rank")}</span>
            </li>
        </ul>
    </div>
</section>
                                

  <CTA />
</BaseLayout>

<style lang="less">
  /* STYLES FOR ABOVE THE FOLD */

/*-- -------------------------- -->
<---           Hero             -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    @keyframes floatAnimation {
        0% {
            transform: translateY(0);
        }
        50% {
            transform: translateY(-2rem);
        }
        100% {
            transform: translateY(0);
        }
    }

    @keyframes floatAnimation2 {
        0% {
            transform: translateY(0);
        }
        50% {
            transform: translateY(-3rem);
        }
        100% {
            transform: translateY(0);
        }
    }

    #hero {
        /* 250px - 500px - leaving extra space for the navigation */
        padding: clamp(15.625rem, 35.95vw, 25rem) calc(16 / 16 * 1rem) 5rem;
        box-sizing: border-box;
        overflow: hidden;
        position: relative;
        z-index: 1;

        &:before {
            /* Overlay */
            content: "";
            width: 100%;
            height: 30%;
            background: -webkit-gradient(
                linear,
                left top,
                left bottom,
                from(rgba(0, 0, 0, 1)),
                to(rgba(0, 0, 0, 0))
            );
            background: -o-linear-gradient(
                top,
                rgba(0, 0, 0, 1) 0%,
                rgba(0, 0, 0, 0) 100%
            );
            background: linear-gradient(
                to bottom,
                rgba(0, 0, 0, 1) 0%,
                rgba(0, 0, 0, 0) 100%
            );
            opacity: 1;
            position: absolute;
            display: block;
            top: 0;
            left: 0;
            z-index: 2;
            /* prevents the cursor from interacting with it */
            pointer-events: none;
        }

        .cs-container {
            width: 100%;
            max-width: calc(1280 / 16 * 1rem);
            margin: auto;
            display: flex;
            justify-content: center;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
            position: relative;
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: center;
            width: 100%;
            max-width: calc(630 / 16 * 1rem);
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: center;
        }

        .cs-topper {
            font-size: calc(20 / 16 * 1rem);
            line-height: 1.2em;
            text-transform: uppercase;
            text-align: inherit;
            letter-spacing: 0.1em;
            font-weight: 700;
            color: #e8e8e8;
            margin-bottom: calc(8 / 16 * 1rem);
            display: block;
        }

        .cs-title {
            /* 39px - 61px */
            font-size: clamp(2.4375rem, 6.4vw, 3.8125rem);
            font-weight: 700;
            line-height: 1.2em;
            text-align: inherit;
            max-width: 20ch;
            margin: 0 0 calc(16 / 16 * 1rem) 0;
            color: #fff;
            position: relative;
        }

        .cs-text {
            font-size: calc(20 / 16 * 1rem);
            line-height: 1.5em;
            text-align: inherit;
            width: 100%;
            /* 464px - 622px */
            max-width: clamp(29rem, 60vw, 38.785rem);
            margin: 0 0 calc(40 / 16 * 1rem) 0;
            color: #e8e8e8;
        }

        .cs-button-solid {
            font-size: calc(16 / 16 * 1rem);
            line-height: calc(56 / 16 * 1rem);
            text-decoration: none;
            font-weight: 700;
            overflow: hidden;
            margin: 0;
            color: #fff;
            padding: 0 calc(48 / 16 * 1rem);
            border-radius: calc(30 / 16 * 1rem);
            background-color: var(--primary);
            display: inline-block;
            position: relative;
            z-index: 1;
            transition: color 0.3s;

            &:before {
                content: "";
                position: absolute;
                display: block;
                height: 100%;
                width: 0%;
                background: #fff;
                opacity: 1;
                top: 0;
                left: 0;
                z-index: -1;
                transition: width 0.3s;
            }

            &:hover {
                color: var(--primary);
                &:before {
                    width: 100%;
                }
            }
        }

        .cs-picture {
            width: 100%;
            /* 427px - 621px */
            max-width: clamp(26.6875rem, 75vw, 38.8125rem);
            height: auto;
            display: flex;
            align-items: flex-end;
            position: relative;
            z-index: 7;

            img {
                width: 100%;
                height: auto;
            }
        }

        .cs-bubbles {
            /* this scales the children inside of it down. They're all in ems so they pull from the parent font size for their value of em, in this case, the value of em is tied to the viewwidth size and stops growing when the font size is equal to 1em, which it pulls from the nearst parent with a declred font size (which is the html tag, and that tag is 16px by default) */
            font-size: min(2.9vw, 0.9em);
            position: absolute;
            z-index: -1;
            opacity: 0.5;
        }

        .cs-bubbles1 {
            width: calc(680 / 16 * 1em);
            height: calc(724 / 16 * 1em);
            right: calc(-190 / 16 * 1rem);
            /* changes to 172 at large desktop */
            bottom: calc(-100 / 16 * 1em);

            &:before {
                /* white border bubble */
                content: "";
                width: calc(622 / 16 * 1em);
                height: calc(622 / 16 * 1em);
                background: transparent;
                border: 1px solid #fff;
                border-radius: 50%;
                opacity: 1;
                position: absolute;
                display: block;
                top: 0;
                left: 0;
                animation-name: floatAnimation;
                animation-duration: 7s;
                animation-timing-function: ease-in-out;
                animation-fill-mode: forwards;
                animation-iteration-count: infinite;
            }

            &:after {
                /* orange bubble */
                content: "";
                width: calc(546 / 16 * 1em);
                height: calc(546 / 16 * 1em);
                background: var(--primary);
                opacity: 0.8;
                border-radius: 50%;
                display: block;
                position: absolute;
                bottom: 0;
                right: 0;
                z-index: -1;
                animation-name: floatAnimation2;
                animation-duration: 10s;
                animation-timing-function: ease-in-out;
                animation-fill-mode: forwards;
                animation-iteration-count: infinite;
            }
        }

        .cs-bubbles2 {
            width: calc(330 / 16 * 1rem);
            height: calc(476 / 16 * 1rem);
            /* changes to 160px at larger desktop */
            left: calc(-260 / 16 * 1rem);
            /* removed at larger desktop */
            top: calc(60 / 16 * 1rem);

            &:before {
                /* white border bubble */
                content: "";
                width: calc(330 / 16 * 1rem);
                height: calc(330 / 16 * 1rem);
                background: transparent;
                border: 1px solid #fff;
                border-radius: 50%;
                opacity: 1;
                position: absolute;
                display: block;
                bottom: 0;
                right: 0;
                animation-name: floatAnimation;
                animation-duration: 5s;
                animation-timing-function: ease-in-out;
                animation-fill-mode: forwards;
                animation-iteration-count: infinite;
            }

            &:after {
                /* orange bubble */
                content: "";
                width: calc(260 / 16 * 1rem);
                height: calc(260 / 16 * 1rem);
                background: var(--primary);
                opacity: 0.8;
                border-radius: 50%;
                display: block;
                position: absolute;
                top: 0;
                right: calc(40 / 16 * 1rem);
                z-index: -1;
                animation-name: floatAnimation2;
                animation-duration: 14s;
                animation-timing-function: ease-in-out;
                animation-fill-mode: forwards;
                animation-iteration-count: infinite;
            }
        }

        .cs-background {
            width: 100%;
            height: 100%;
            display: block;
            position: absolute;
            top: 0;
            left: 0;
            z-index: -2;

            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                object-fit: cover;
                /* makes the top of the image start at the top of the parent */
                object-position: top;
            }
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #hero {
        /* 180px - 250px */
        padding-bottom: clamp(11.25rem, 16.5vw, 15.625rem);

        .cs-container {
            flex-direction: row;
            justify-content: space-between;
        }

        .cs-content {
            text-align: left;
            width: 53%;
            align-items: flex-start;
        }

        .cs-picture {
            width: 100%;
            position: absolute;
            bottom: calc(-400 / 16 * 1rem);
            right: calc(-160 / 16 * 1rem);
        }

        .cs-bubbles {
            font-size: 1em;
        }

        .cs-bubbles1 {
            /* changes to auto at large desktop */
            right: calc(-300 / 16 * 1rem);
        }
    }
}

/* Desktop - 1024px */
@media only screen and (min-width: 48rem) {
    #hero {
        .cs-picture {
            bottom: calc(-230 / 16 * 1rem);
        }
    }
}

/* Large Desktop - 1300px */
@media only screen and (min-width: 81.25rem) {
    #hero {
        .cs-container {
            position: initial;
        }

        .cs-picture {
            margin-left: calc(70 / 16 * 1rem);
            left: 50%;
            right: auto;
            bottom: -1px;
        }

        .cs-bubbles1 {
            /* 200px - 450px */
            margin-left: clamp(12.5rem, 20vw, 28.125rem);
            top: calc(172 / 16 * 1rem);
            right: auto;
            bottom: auto;
            left: 50%;
        }
    }
}

/* Large Desktop Parallax Effect - 1600px */
@media only screen and (min-width: 100rem) {
    #hero {
        .cs-background {
            background: url("/assets/images/hero.jpg");
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
            background-attachment: fixed;
            img {
                display: none;
            }
        }
    }
}

/* Larger Desktop - 1800px */
@media only screen and (min-width: 112.5rem) {
    #hero {
        .cs-bubbles2 {
            margin-right: calc(800 / 16 * 1rem);
            right: 50%;
            left: auto;
            top: calc(210 / 16 * 1rem);
            bottom: auto;
        }
    }
}


/*-- -------------------------- -->
<---        Why Choose          -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #why-choose-289 {
        text-align: center;
        padding: var(--sectionPadding);

        .cs-container {
            width: 100%;
            /* changes to 1280px on tablet */
            max-width: calc(550 / 16 * 1rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: left;
            width: 100%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: flex-start;
        }

        .cs-text {
            max-width: calc(522 / 16 * 1rem);
        }

        .cs-card-group {
            width: 100%;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            gap: calc(16 / 16 * 1rem);
        }

        .cs-item {
            list-style: none;
            text-align: left;
            width: 100%;
            padding: calc(32 / 16 * 1rem);
            background-color: #f7f7f7;
            border-radius: calc(16 / 16 * 1rem);
            /* prevents padding from adding to height and width */
            box-sizing: border-box;
            //transition: background-color 0.3s;
            &:hover {
                background-color: var(--primary);
                cursor: pointer;
                box-shadow: #067bc099 0px -10px 58px, #067bc08c 0px 1px 14px;

                .cs-icon {
                    filter: grayscale(1) brightness(1000%);
                }

                .cs-h3 {
                    color: var(--bodyTextColorWhite);
                }

                .cs-item-text {
                    color: var(--bodyTextColorWhite);
                }
            }
        }

        .cs-icon {
            width: auto;
            height: calc(48 / 16 * 1rem);
            margin-bottom: calc(24 / 16 * 1rem);
            display: block;
            transition: filter 0.3s;
        }

        .cs-h3 {
            /* 20px - 25px */
            font-size: clamp(1.25rem, 2.5vw, 1.5625rem);
            line-height: 1.2em;
            margin: 0;
            margin-bottom: calc(16 / 16 * 1rem);
            color: var(--headerColor);
            transition: color 0.3s;
        }

        .cs-item-text {
            font-size: calc(16 / 16 * 1rem);
            line-height: 1.5em;
            margin: 0;
            color: var(--bodyTextColor);
            transition: color 0.3s;
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #why-choose-289 {
        .cs-container {
            max-width: calc(1280 / 16 * 1rem);
        }

        .cs-content {
            flex-direction: row;
            justify-content: space-between;
            align-items: flex-end;
            gap: calc(64 / 16 * 1rem);
        }

        .cs-flex {
            width: 50%;
        }

        .cs-title {
            margin: 0;
        }

        .cs-card-group {
            justify-content: space-between;
            /* makes sure every box "stretches" to be the same height as the tallest box */
            align-items: stretch;
            flex-direction: row;
            /* 16px - 20px */
            gap: clamp(1rem, 1.5vw, 1.25rem);
        }

        .cs-item {
            width: auto;
            /* 16px - 32px */
            padding: calc(32 / 16 * 1rem) clamp(1rem, 2.1vw, 2rem);
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #why-choose-289 {
            .cs-topper {
                color: var(--primaryLight);
            }
            .cs-title,
            .cs-text,
            .cs-h3,
            .cs-item-text {
                color: var(--bodyTextColorWhite);
            }

            .cs-item {
                background-color: var(--accent);
                &:hover {
                    background-color: var(--primary);
                    box-shadow: #067bc099 0px 14px 28px, #067bc08c 0px 10px 10px;
                    transition-duration: 0.1s;
                }
            }

            .cs-icon {
                /* makes it so bright it turns white */
                filter: brightness(1000%);
            }
        }
    }
}


/*-- -------------------------- -->
<---           Steps            -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #steps-1171 {
        padding: var(--sectionPadding);
        background-color: #1a1a1a;
        overflow: hidden;
        position: relative;
        z-index: 1;

        .cs-container {
            width: 100%;
            /* changes to 1280px at desktop */
            max-width: (704/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: center;
            width: 100%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: center;
        }

        .cs-text {
            font-size: var(--bodyFontSize);
            line-height: 1.5em;
            text-align: inherit;
            width: 100%;
            max-width: (650/16rem);
            margin: 0;
            color: var(--bodyTextColor);
        }

        .cs-topper {
            color: var(--primary);
        }

        .cs-title,
        .cs-text {
            color: var(--bodyTextColorWhite);
        }

        .cs-text {
            opacity: 0.8;
        }

        .cs-card-group {
            width: 100%;
            margin: 0;
            padding: 0;
            display: grid;
            grid-template-columns: repeat(12, 1fr);
            gap: (20/16rem);
        }

        .cs-item {
            text-align: center;
            list-style: none;
            display: flex;
            grid-column: span 12;
            flex-direction: column;
            align-items: center;
            position: relative;

            &:last-of-type {
                &:after {
                    display: none;
                }
            }

            &:nth-of-type(even) {
                &:after {
                    /* scaleX -1 flips it horizontally */
                    transform: rotate(-135deg) scaleX(-1);
                }
            }

            &:after {
                content: "";
                position: relative;
                display: block;
                /* 54px - 84px */
                width: clamp(3.375rem, 6vw, 5.25rem);
                height: clamp(3.375rem, 6vw, 5.25rem);
                margin-top: (20/16rem);
                background: url("assets/svgs/curved-arrow.svg");
                background-size: contain;
                background-position: center;
                background-repeat: no-repeat;
                opacity: 1;
                transform: rotate(135deg);
            }
            &:hover .cs-picture{
                box-shadow: #067bc099 0px -10px 58px, #067bc08c 0px 1px 14px;
            }
        }

        .cs-picture {
            margin-bottom: (24/16rem);
            width: (88/16rem);
            height: (88/16rem);
            border: 1px solid rgb(6 123 192 / 50%);
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            
        }

        .cs-icon {
            width: (40/16rem);
            height: auto;
            display: block;
        }

        .cs-h3 {
            font-size: (20/16rem);
            line-height: 1.2em;
            text-align: inherit;
            margin: 0 0 (12/16rem) 0;
            color: var(--bodyTextColorWhite);
        }

        .cs-item-p {
            font-size: (16/16rem);
            line-height: 1.5em;
            text-align: inherit;
            max-width: (342/16rem);
            margin: 0;
            color: var(--bodyTextColorWhite);
            opacity: 0.8;
        }

        .cs-graphic {
            width: (840/16rem);
            height: auto;
            opacity: 0.05;
            position: absolute;
            top: (-80/16rem);
            left: (-80/16rem);
            transform: rotate(-10deg);
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #steps-1171 {
        .cs-item {
            grid-column: span 6;

            &:nth-of-type(2) {
                &:after {
                    display: none;
                }
            }

            &:nth-of-type(1) {
                &:after {
                    transform: rotate(135deg) scaleX(-1);
                }
            }

            &:after {
                margin: 0;
                position: absolute;
                right: (-40/16rem);
                top: 0;
                transform: rotate(45deg);
            }
        }
    }
}

/* Desktop - 1024px */
@media only screen and (min-width: 64rem) {
    #steps-1171 {
        .cs-container {
            max-width: (1280/16rem);
        }

        .cs-item {
            grid-column: span 3;

            &:nth-of-type(2) {
                &:after {
                    display: block;
                    transform: rotate(45deg);
                }
            }

            &:nth-of-type(3) {
                &:after {
                    display: block;
                    transform: rotate(135deg) scaleX(-1);
                }
            }

            &:after {
                right: (-48/16rem);
            }
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #steps-1171 {
            background-color: rgba(0, 0, 0, 0.2);
        }
    }
}
                                
                                
/*-- -------------------------- -->
<---          Industries          -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #services-1724 {
        padding: var(--sectionPadding);
        /* removing the side paddings to allow the cards to fit the whole page width */
        padding-right: 0;
        padding-left: 0;
        position: relative;

        .cs-container {
            width: 100%;
            max-width: calc(2500 / 16 * 1rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: center;
            width: 100%;
            max-width: calc(1280 / 16 * 1rem);
            box-sizing: border-box;
            /* 16px - 40px */
            padding: 0 clamp(1rem, 3.8vw, 2.5rem);
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: center;
            gap: calc(16 / 16 * 1rem);
        }

        .cs-title {
            max-width: 12ch;
        }

        .cs-text {
            max-width: calc(632 / 16 * 1rem);
        }

        .cs-card-group {
            width: 100%;
            margin: 0;
            padding: 0;
            display: grid;
            grid-template-columns: repeat(12, 1fr);
        }

        .cs-item {
            text-align: left;
            list-style: none;
            width: 100%;
            /* 220px - 480px */
            height: clamp(13.75rem, 32vw, 30rem);
            margin: 0;
            /* prevents padding and border from affecting height and width */
            box-sizing: border-box;
            padding: 0;
            background-color: #000;
            box-shadow: 0px 12px 80px 0px rgba(26, 26, 26, 0.08);
            display: flex;
            flex-direction: column;
            justify-content: flex-end;
            align-items: flex-start;
            grid-column: span 12;
            position: relative;
            z-index: 1;

            &:hover {
                .cs-picture {
                    &::after {
                        opacity: 0.6;
                    }

                    img {
                        transform: scale(1.2);
                    }
                }

                .cs-number {
                    opacity: 1;
                    /* 16px - 32px */
                    top: clamp(1rem, 2.3vw, 2rem);
                }

                .cs-h3 {
                    opacity: 1;
                    /* 16px - 32px */
                    bottom: clamp(1rem, 2.3vw, 2rem);
                }
            }
        }

        .cs-link {
            text-decoration: none;
            width: 100%;
            height: 100%;
            box-sizing: border-box;
            /* 16px - 32px */
            padding: clamp(1rem, 2.3vw, 2rem);
            /* we use flexbox here to grow the link to fit the whole item, making it clickable everywhere, no matter the size */
            display: flex;
            flex-direction: column;
            justify-content: flex-end;
            position: relative;
            z-index: 1;

            &::after {
                /* hover overlay */
                content: "";
                width: 100%;
                height: 100%;
                opacity: 0;
                position: absolute;
                top: 0;
                right: 0;
                z-index: -1;
                /* as we can't animate background gradients, we animate the change of opacity from 0 to 1 */
                transition: opacity 0.3s;
            }
        }

        .cs-number {
            /* 49px - 84px */
            font-size: clamp(3.0625rem, 6vw, 5.25rem);
            font-weight: 900;
            /* sets the fill of the number to be transparent */
            color: rgba(0, 0, 0, 0);
            opacity: 0;
            position: absolute;
            top: 0;
            /* 16px - 32px */
            right: clamp(1rem, 2.3vw, 2rem);
            transition: opacity 0.3s, top 0.3s;
            /* provides a 1px white stroke to the text, outlining it */
            -webkit-text-stroke-width: 1px;
            -webkit-text-stroke-color: var(--bodyTextColorWhite);
        }

        .cs-h3 {
            /* 20px - 31px */
            font-size: clamp(1.25rem, 2vw, 1rem);
            font-weight: 900;
            line-height: 1.2em;
            white-space: nowrap;
            /* width, overflow, text-overflow and white-space all provide the ellipsis when the h3 content is too long */
            width: 80%;
            margin: 0;
            color: var(--bodyTextColorWhite);
            overflow: hidden;
            transition: opacity 0.3s, bottom 0.3s;
        }

        .cs-picture {
            width: 100%;
            height: 100%;
            display: block;
            /* prevents the mouse from interacting with it */
            pointer-events: none;
            position: absolute;
            top: 0;
            left: 0;
            z-index: -1;
            overflow: hidden;

            &:before {
                /* gradient overlay */
                content: '';
                width: 100%;
                height: 100%;
                background: linear-gradient(180deg, rgba(102, 102, 102, 0.00) 0%, #000 100%);
                opacity: 1;
                position: absolute;
                display: block;
                top: 0;
                left: 0;
            }

            &:after {
                /* background color overlay on hover */
                content: "";
                width: 100%;
                height: 100%;
                background-color: var(--primary);
                opacity: 0;
                display: block;
                position: absolute;
                bottom: 0;
                left: 0;
                transition: opacity 0.3s;
            }

            img {
                width: 100%;
                height: 100%;
                /* Makes img tag act as a background image */
                object-fit: cover;
                position: absolute;
                top: 0;
                left: 0;
                z-index: -1;
                transition: transform 0.7s;
            }
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #services-1724 {
        padding-bottom: 0;

        .cs-content {
            text-align: left;
            flex-direction: row;
            justify-content: space-between;
            align-items: flex-end;
            gap: calc(40 / 16 * 1rem);
        }

        .cs-item {
            grid-column: span 4;

            &:nth-of-type(4), &:nth-of-type(5) {
                grid-column: span 6;
            }
        }

        .cs-text {
            width: 60%;
        }

        .cs-title {
            margin: 0;
        }
    }
}

/* Desktop - 1300px */
@media only screen and (min-width: 81.25rem) {
    #services-1724 {
        .cs-card-group {
            grid-template-columns: repeat(5, 1fr);
        }

        .cs-item {
            grid-column: span 1;
            &:nth-of-type(4), &:nth-of-type(5) {
                grid-column: span 1;
            }
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #services-1724 {
            .cs-title,
            .cs-text {
                color: var(--bodyTextColorWhite);
            }

            .cs-text {
                opacity: 0.8;
            }
        }
    }
}

/*-- -------------------------- -->
<---          Reviews           -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #reviews-355 {
        padding: var(--sectionPadding);

        .cs-container {
            width: 100%;
            max-width: (1440/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: center;
            width: 100%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: center;
        }

        .cs-card-group {
            padding: 0;
            margin: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            /* 16px - 20px */
            gap: clamp(1rem, 2.5vw, 1.15rem);
        }

        .cs-item {
            list-style: none;
            width: 100%;
            max-width: (630/16rem);
            margin: 0;
            /* 24px - 32px top & bottom */
            /* 16px - 40px left & right */
            padding: clamp(1.5rem, 3.15vw, 2rem) clamp(1rem, 3.15vw, 2.5rem);
            background-color: #f7f7f7;
            border-radius: (16/16rem);
            /* prevents padding from adding to height and width */
            box-sizing: border-box;
            display: flex;
            justify-content: center;
            align-items: flex-start;
            flex-direction: column;
            position: relative;
        }

        .cs-quote {
            width: (40/16rem);
            height: auto;
            margin-bottom: (32/16rem);
            display: block;
        }

        .cs-review {
            /* 14px - 20px */
            font-size: clamp(0.875rem, 2vw, 1.25rem);
            line-height: 1.5em;
            margin: 0;
            /* 20px - 40px */
            margin-bottom: clamp(1.25rem, 3vw, 2.5rem);
            color: var(--bodyTextColor);
        }

        .cs-name {
            /* 20px - 25px */
            font-size: clamp(1.25rem, 3vw, 1.5625rem);
            line-height: 1.2em;
            font-weight: 700;
            margin: 0;
            /* in case one card has more text than the other, this pushes up against the review text so the name and title are always at the bottom. Only works if parent is a flexbox */
            margin-top: auto;
            color: var(--headerColor);
            display: block;
        }

        .cs-job {
            /* 14px - 16px */
            font-size: clamp(0.875rem, 1.6vw, 1rem);
            line-height: 1.5em;
            margin: 0;
            color: var(--bodyTextColor);
            display: block;
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #reviews-355 {
        .cs-card-group {
            flex-direction: row;
            justify-content: center;
            align-items: stretch;
            flex-wrap: wrap;
        }

        .cs-item {
            width: clamp(31.5%, 30vw, 32.3%);
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #reviews-355 {
            .cs-topper {
                color: var(--primaryLight);
            }

            .cs-title,
            .cs-text {
                color: var(--bodyTextColorWhite);
            }

            .cs-item {
                background-color: var(--accent);
            }

            .cs-review,
            .cs-name {
                color: var(--bodyTextColorWhite);
            }

            .cs-job {
                color: var(--bodyTextColorWhite);
                opacity: 0.7;
            }
        }
    }
}

                                
</style>
