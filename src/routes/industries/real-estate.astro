---
import BaseLayout from "@layouts/BaseLayout.astro";
import CTA from "@components/CTA.astro";
import Landing from "@components/Landing.astro";
import {getLocalePath,t } from "i18n:astro";

// Optimize our landing image and pass it as props to the BaseLayout (for preloading) and Landing (for rendering)
import {getOptimizedImage} from "@utils/utils"
import landingImage from "@assets/images/WebBannerBackgroundIllustration.jpg" // <-- THE PATH TO THE ASSET YOU WANT TO PRELOAD - The asset must live in src
const optimizedImage = await getOptimizedImage(landingImage)
---

<BaseLayout
  title={t("industries:real-estate.landing")}
  description="Boost your rankings with expert SEO. We improve visibility, traffic, and conversions through keyword strategy, optimization, and link building."
  preloadedImage = {optimizedImage}
>
  <!-- ============================================ -->
  <!--                    LANDING                   -->
  <!-- ============================================ -->

  <Landing 
    title={t("industries:real-estate.landing")} 
    image={optimizedImage}
    url="industries/real-estate"
  />

  <!-- ============================================ -->
  <!--            Side By Side Reverse              -->
  <!-- ============================================ -->

  <section id="sbsr-1363">
    <div class="cs-container">
        <div class="cs-image-group">
            <picture class="cs-background">
                <!--Mobile Image-->
                <source media="(max-width: 600px)" srcset="/assets/images/realestate.jpg">
                <!--Tablet and above Image-->
                <source media="(min-width: 601px)" srcset="/assets/images/realestate.jpg">
                <img loading="lazy" decoding="async" src="/assets/images/realestate.jpg" alt="people" width="605868" height="690">
            </picture>
        </div>
        <div class="cs-content">
            <span class="cs-topper">{t("industries:real-estate.topper")}</span>
            <h2 class="cs-title">{t("industries:real-estate.landing")} </h2>
            <p class="cs-text">
                {t("industries:real-estate.p")}
            </p>
            <ul class="cs-ul">
                <li class="cs-li">
                    <img class="cs-icon" aria-hidden="true" loading="lazy" decoding="async" src="/assets/svgs/black-check.svg" alt="checkmark" width="24" height="24">
                    {t("industries:real-estate.l1")}
                </li>
                <li class="cs-li">
                    <img class="cs-icon" aria-hidden="true" loading="lazy" decoding="async" src="/assets/svgs/black-check.svg" alt="checkmark" width="24" height="24">
                    {t("industries:real-estate.l2")}
                </li>
                <li class="cs-li">
                    <img class="cs-icon" aria-hidden="true" loading="lazy" decoding="async" src="/assets/svgs/black-check.svg" alt="checkmark" width="24" height="24">
                    {t("industries:real-estate.l3")}
                </li>
                <li class="cs-li">
                    <img class="cs-icon" aria-hidden="true" loading="lazy" decoding="async" src="/assets/svgs/black-check.svg" alt="checkmark" width="24" height="24">
                    {t("industries:real-estate.l4")}
                </li>
            </ul>
            <a href={getLocalePath("/contact")} class="cs-button-solid">{t("industries:real-estate.cta")}</a>
        </div>
    </div>
    <div class="cs-bubbles" aria-hidden="true"></div>
</section>
                                
<!-- ============================================ -->
<!--                    FAQ                       -->
<!-- ============================================ -->

<section id="faq-1741">
    <div class="cs-container">
        <div class="cs-content">
            <span class="cs-topper">{t("industries:real-estate.faq.topper")}</span>
            <h2 class="cs-title">{t("industries:real-estate.faq.title")}</h2>
            <a href={getLocalePath("/contact")} class="cs-button-solid">
                Ask Another Question
            </a>
        </div>
        <div class="cs-flex-group">
            <ul class="cs-faq-group">
                <li class="cs-faq-item active">
                    <button class="cs-button">
                        <span class="cs-button-text">
                            {t("industries:real-estate.faq.q1.q")}
                        </span>
                    </button>
                    <p class="cs-item-text">
                        {t("industries:real-estate.faq.q1.a")}
                    </p>
                </li>
                <li class="cs-faq-item">
                    <button class="cs-button">
                        <span class="cs-button-text">
                            {t("industries:real-estate.faq.q2.q")}
                        </span>
                    </button>
                    <p class="cs-item-text">
                        {t("industries:real-estate.faq.q2.a")}
                    </p>
                </li>
                <li class="cs-faq-item">
                    <button class="cs-button">
                        <span class="cs-button-text">
                            {t("industries:real-estate.faq.q3.q")}
                        </span>
                    </button>
                    <p class="cs-item-text">
                        {t("industries:real-estate.faq.q3.a")}
                    </p>
                </li>
                <li class="cs-faq-item">
                    <button class="cs-button">
                        <span class="cs-button-text">
                            {t("industries:real-estate.faq.q4.q")}
                        </span>
                    </button>
                    <p class="cs-item-text">
                        {t("industries:real-estate.faq.q4.a")}
                    </p>
                </li>
                <li class="cs-faq-item">
                    <button class="cs-button">
                        <span class="cs-button-text">
                            {t("industries:real-estate.faq.q5.q")}
                        </span>
                    </button>
                    <p class="cs-item-text">
                        {t("industries:real-estate.faq.q5.a")}
                    </p>
                </li>
            </ul>
        </div>
    </div>
</section>
  <CTA />
</BaseLayout>

<style lang="less">
  /* PAGE-SPECIFIC STYLES FOR THE ABOUT PAGE */

  /*-- -------------------------- -->
<---       Side By Side         -->
<--- -------------------------- -*/
/*-- -------------------------- -->
<---   Side By Side Reverse     -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    @keyframes floatAnimation {
        0% {
            transform: translateY(0);
        }
        50% {
            transform: translateY(-2rem);
        }
        100% {
            transform: translateY(0);
        }
    }

    @keyframes floatAnimation2 {
        0% {
            transform: translateY(0);
        }
        50% {
            transform: translateY(-3rem);
        }
        100% {
            transform: translateY(0);
        }
    }

    #sbsr-1363 {
        padding: var(--sectionPadding);
        position: relative;
        overflow: hidden;
        z-index: 1;

        .cs-container {
            width: 100%;
            /* changes to 1280px at desktop */
            max-width: calc(584 / 16 * 1rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: left;
            width: 100%;
            max-width: calc(630 / 16 * 1rem);
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: flex-start;
        }

        .cs-topper {
            
        }

        .cs-title {
            /* 23 characters wide including spaces */
            max-width: 26ch;
        }

        .cs-text {
            margin-bottom: calc(16 / 16 * 1rem);
            &:last-of-type {
                margin-bottom: calc(24 / 16 * 1rem);
            }
        }

        .cs-card-group {
            width: 100%;
            max-width: calc(630 / 16 * 1rem);
            margin: 0 0 calc(24 / 16 * 1rem) 0;
            padding: 0;
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(15.265rem, 1fr));
            align-items: center;
            gap: clamp(1rem, 2vw, 1.25rem);
        }

        .cs-item {
            list-style: none;
            /* 16px - 24px */
            padding: clamp(1rem, 3vw, 1.5rem);
            /* prevents padding from affecting height and width */
            box-sizing: border-box;
            background-color: #f7f7f7;
            border-radius: calc(16 / 16 * 1rem);
            border: 1px solid #e8e8e8;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            gap: calc(12 / 16 * 1rem);
        }

        .cs-h3 {
            font-size: calc(20 / 16 * 1rem);
            line-height: 1.2em;
            font-weight: 700;
            margin: 0;
            color: var(--headerColor);
            display: flex;
            justify-content: flex-start;
            align-items: center;
            gap: calc(8 / 16 * 1rem);
        }

        .cs-h3-icon {
            width: calc(32 / 16 * 1rem);
            height: auto;
            display: block;
        }

        .cs-item-text {
            font-size: calc(14 / 16 * 1rem);
            line-height: 1.5em;
            margin: 0;
            color: var(--bodyTextColor);
        }

        .cs-ul {
            width: 100%;
            margin: 0 0 calc(24 / 16 * 1rem) 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            gap: calc(12 / 16 * 1rem);
        }

        .cs-li {
            font-size: var(--bodyFontSize);
            list-style: none;
            line-height: 1.5em;
            width: 100%;
            color: var(--bodyTextColor);
            display: flex;
            justify-content: flex-start;
            /* push icon top the top so if the list item goes to two lines the icon stays at the top */
            align-items: flex-start;
            gap: calc(8 / 16 * 1rem);
        }

        .cs-icon {
            width: calc(24 / 16 * 1rem);
            height: auto;
            /* adds extra space between the icon and top of parent so it's more centered */
            margin-top: 1px;
            display: block;
        }

        .cs-button-solid {
            font-size: calc(16 / 16 * 1rem);
            line-height: calc(56 / 16 * 1rem);
            text-decoration: none;
            font-weight: 700;
            overflow: hidden;
            margin: 0;
            color: #fff;
            padding: 0 calc(48 / 16 * 1rem);
            border-radius: calc(30 / 16 * 1rem);
            background-color: var(--primary);
            display: inline-block;
            position: relative;
            z-index: 1;
            transition: color 0.3s;

            &:before {
                content: "";
                position: absolute;
                display: block;
                height: 100%;
                width: 0%;
                background: #1a1a1a;
                opacity: 1;
                top: 0;
                left: 0;
                z-index: -1;
                transition: width 0.3s;
            }

            &:hover {
                color: var(--primary);
                &:before {
                    width: 100%;
                }
            }
        }

        .cs-image-group {
            width: 100%;
            max-width: calc(586 / 16 * 1rem);
            /* Changes to auto at desktop */
            height: calc(520 / 16 * 1rem);
            /* 32px - 48px */
            border-radius: clamp(2rem, 4vw, 3rem);
            /* clips the corners of the children around the border radius */
            overflow: hidden;
            position: relative;
        }

        .cs-background {
            width: 100%;
            height: 100%;
            max-height: 570px;
            /* makes it cover the parent dimensions */
            object-fit: cover;
            display: block;

            img {
                width: 100%;
                height: 100%;
                /* makes it cover the parent like a backgorund image */
                object-fit: cover;
                display: block;
            }
        }

        .cs-box {
            text-align: left;
            width: 100%;
            max-width: calc(304 / 16 * 1rem);
            padding: calc(32 / 16 * 1rem);
            /* prevents padding from affecting height and width */
            box-sizing: border-box;
            background-color: var(--primary);
            /* 48px - 80px */
            border-radius: calc(32 / 16 * 1rem);
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            gap: calc(24 / 16 * 1rem);
            position: absolute;
            /* 12px - 20px */
            right: clamp(0.75rem, 1.9vw, 1.5rem);
            /* 12px - 20px */
            bottom: clamp(0.75rem, 1.9vw, 1.5rem);
        }

        .cs-box-icon {
            width: calc(60 / 16 * 1rem);
            height: auto;
            display: block;
        }

        .cs-desc {
            font-size: calc(20 / 16 * 1rem);
            line-height: 1.2em;
            text-align: inherit;
            font-weight: 700;
            width: 100%;
            margin: 0;
            color: var(--bodyTextColorWhite);
        }

        .cs-bubbles {
            font-size: min(2.5vw, 0.7em);
            width: calc(419 / 16 * 1em);
            height: calc(427 / 16 * 1em);
            position: absolute;
            /* Reset at larger desktop */
            right: calc(-260 / 16 * 1em);
            /* chnages to 30px at desktop */
            bottom: calc(-50 / 16 * 1em);
            z-index: -1;

            &:before {
                /* white border bubble */
                content: "";
                width: calc(330 / 16 * 1em);
                height: calc(330 / 16 * 1em);
                background: transparent;
                border: 1px solid #1a1a1a;
                border-radius: 50%;
                opacity: 1;
                position: absolute;
                display: block;
                top: 0;
                right: 0;
                animation-name: floatAnimation;
                animation-duration: 5s;
                animation-timing-function: ease-in-out;
                animation-fill-mode: forwards;
                animation-iteration-count: infinite;
            }

            &:after {
                /* orange bubble */
                content: "";
                width: calc(260 / 16 * 1em);
                height: calc(260 / 16 * 1em);
                background: var(--primary);
                opacity: 0.15;
                border-radius: 50%;
                display: block;
                position: absolute;
                bottom: 0;
                left: 0;
                z-index: -1;
                animation-name: floatAnimation2;
                animation-duration: 14s;
                animation-timing-function: ease-in-out;
                animation-fill-mode: forwards;
                animation-iteration-count: infinite;
            }
        }
    }
}

/* Small Desktop - 1024px */
@media only screen and (min-width: 64rem) {
    #sbsr-1363 {
        .cs-container {
            max-width: calc(1280 / 16 * 1rem);
            flex-direction: row;
            justify-content: space-between;
            align-items: stretch;
        }

        .cs-image-group {
            height: auto;
            /* sends it to the right in the 2nd position */
            order: 2;
        }

        .cs-bubbles {
            font-size: min(2.5vw, 1em);
            bottom: calc(0 / 16 * 1rem);
            right: calc(-100 / 16 * 1rem);
        }
    }
}

/* Large Desktop 1600px */
@media only screen and (min-width: 100rem) {
    #sbsr-1363 {
        .cs-bubbles {
            margin-right: calc(750 / 16 * 1rem);
            left: auto;
            right: 50%;
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #sbsr-1363 {
            .cs-topper {
                color: var(--primary);
            }

            .cs-title,
            .cs-text,
            .cs-li,
            .cs-item-text {
                color: var(--bodyTextColorWhite);
            }

            .cs-text,
            .cs-li,
            .cs-item-text {
                opacity: 0.8;
            }

            .cs-item {
                background-color: rgba(0, 0, 0, 0.2);
                border-color: rgba(255, 255, 255, 0.2);
            }

            .cs-h3 {
                color: var(--bodyTextColorWhite);
            }

            .cs-icon {
                filter: grayscale(1) brightness(1000%);
            }

            .cs-bubbles {
                &:before {
                    border-color: rgba(255, 255, 255, 0.2);
                }
            }
        }
    }
}

/*-- -------------------------- -->
<---            FAQ             -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #faq-1741 {
        padding: var(--sectionPadding);
        position: relative;

        .cs-container {
            width: 100%;
            /* changes to 1280px at desktop */
            max-width: calc(584/16 * 1rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: center;
            width: 100%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: center;
        }

        .cs-title {
            max-width: 15ch;
            margin: 0 0 calc(32/16 * 1rem);
            font-size: calc(32/16 * 1.5rem);
        }

        .cs-button-solid {
            font-size: calc(16/16 * 1rem);
            font-weight: 700;
            /* 46px - 56px */
            line-height: clamp(2.875rem, 5.5vw, 3.5rem);
            text-align: center;
            text-decoration: none;
            min-width: calc(150/16 * 1rem);
            margin: 0;
            /* prevents padding from adding to the width */
            box-sizing: border-box;
            padding: 0 calc(24/16 * 1rem);
            background-color: var(--primary);
            color: #fff;
            display: inline-block;
            position: relative;
            z-index: 1;

            &:before {
                content: "";
                width: 0%;
                height: 100%;
                background: #000;
                opacity: 1;
                border-radius: calc(4/16 * 1rem);
                position: absolute;
                top: 0;
                left: 0;
                z-index: -1;
                transition: width 0.3s;
            }

            &:hover {
                &:before {
                    width: 100%;
                }
            }
        }

        .cs-faq-group {
            width: 100%;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            gap: calc(12/16 * 1rem);
        }

        .cs-faq-item {
            list-style: none;
            width: 100%;
            /* clips all corners of the button that overlap the rounded border */
            overflow: hidden;
            transition: border-bottom 0.3s;

            &.active {
                .cs-button {
                    background-color: var(--primary);
                    color: var(--bodyTextColorWhite);

                    &:before {
                        background-color: var(--bodyTextColorWhite);
                        transform: rotate(315deg);
                    }

                    &:after {
                        background-color: var(--bodyTextColorWhite);
                        transform: rotate(-315deg);
                    }
                }

                .cs-item-text {
                    height: auto;
                    /* 16px - 24px */
                    padding: calc(16/16 * 1rem) clamp(1rem, 2vw, 1.5rem);
                    opacity: 1;
                    border: 1px solid #e8e8e8;
                }
            }
        }

        .cs-button {
            /* 16px - 20px */
            font-size: clamp(1rem, 2.5vw, 1.25rem);
            font-weight: bold;
            line-height: 1.2em;
            text-align: left;
            width: 100%;
            padding: calc(16/16 * 1rem);
            padding-left: calc(52/16 * 1rem);
            background-color: transparent;
            color: var(--headerColor);
            border: 1px solid #e8e8e8;
            display: block;
            position: relative;
            transition: background-color 0.3s, color 0.3s;

            &:hover {
                cursor: pointer;
            }

            &:before {
                /* left line */
                content: "";
                width: calc(8/16 * 1rem);
                height: calc(2/16 * 1rem);
                background-color: var(--headerColor);
                opacity: 1;
                display: block;
                position: absolute;
                top: 45%;
                left: calc(18/16 * 1rem);
                transform: rotate(45deg);
                transition: transform 0.5s;
                /* animate the transform from the left side of the x axis, and the center of the y */
                transform-origin: left center;
            }

            &:after {
                /* right line */
                content: "";
                width: calc(8/16 * 1rem);
                height: calc(2/16 * 1rem);
                background-color: var(--headerColor);
                opacity: 1;
                display: block;
                position: absolute;
                top: 45%;
                left: calc(21/16 * 1rem);
                transform: rotate(-45deg);
                transition: transform 0.5s;
                /* animate the transform from the right side of the x axis, and the center of the y */
                transform-origin: right center;
            }
        }

        .cs-item-text {
            /* 14px - 16px */
            font-size: clamp(0.875rem, 1.5vw, 1rem);
            line-height: 1.5em;
            height: 0;
            margin: 0;
            /* clips the text so it doesn't show up */
            overflow: hidden;
            color: var(--bodyTextColor);
            opacity: 0;
            transition: opacity 0.3s, padding-bottom 0.3s;
        }

        .cs-gallery {
            width: 100%;
            /* changes to 1720 at tablet */
            max-width: calc(584/16 * 1rem);
            margin: clamp(3rem, 6vw, 4rem) auto 0;
            padding: 0;
            display: grid;
            grid-template-columns: repeat(5, 1fr);
            /* 16px - 20px */
            gap: clamp(1rem, 1.5vw, 1.25rem);
        }

        .cs-picture {
            /* 210px - 400px */
            min-height: clamp(13.125rem, 27vw, 25rem);
            display: block;
            grid-column: span 5;
            grid-row: span 1;
            position: relative;

            img {
                width: 100%;
                height: 100%;
                /* makes it act like a background image */
                object-fit: cover;
                position: absolute;
                top: 0;
                left: 0;
            }
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #faq-1741 {
        .cs-gallery {
            max-width: calc(1720/16 * 1rem);
        }

        .cs-picture {
            grid-column: span 1;
        }
    }
}

/* Desktop - 1024px */
@media only screen and (min-width: 64rem) {
    #faq-1741 {
        .cs-container {
            max-width: calc(1280/16 * 1rem);
            flex-direction: row;
            justify-content: space-between;
            align-items: stretch;
        }

        .cs-content {
            text-align: left;
            width: 40%;
            align-items: flex-start;
            /* prevents flexbox from squishing it */
            flex: none;
        }

        .cs-gallery {
            grid-template-columns: repeat(5, 1fr);
        }

        .cs-picture {
            grid-column: span 1;

            &:nth-of-type(4),
            &:nth-of-type(5) {
                grid-column: span 1;
            }
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #faq-1741 {
            .cs-title,
            .cs-item-text {
                color: var(--bodyTextColorWhite);
            }

            .cs-faq-item {

                &.active {
                    .cs-button {
                        background-color: var(--primary);
                        color: var(--bodyTextColorWhite);

                        &:before,
                        &:after {
                            background-color: var(--bodyTextColorWhite);
                        }
                    }

                    .cs-item-text {
                        /* 20px - 24px */
                        padding-top: clamp(1.25rem, 1.3vw, 1.5rem);
                        border-color: var(--accent);
                    }
                }
            }

            .cs-button {
                color: var(--bodyTextColorWhite);
                border-color: var(--accent);

                &:before,
                &:after {
                    background-color: var(--bodyTextColorWhite);
                }
            }
        }
    }
}
</style>
